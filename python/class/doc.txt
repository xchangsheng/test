一、函数式编程
	函数式编程是为了解决全局变量带来的代码臃肿和不易维护性以及易出错性而设计的一种编程方式，将想要实现的代码，通过定义一个函数的方式，减少全局变量的使用，从而降低程序中由于改动全局变量对整体代码的危害。
	def fun([strlist]):
		pass

二、面向对象编程，同函数式编程一样，为了解决全局变量带来的各种问题。提出的另一种解决方案，该方案更加适用，其中包含了实例的属性以及方法等。
	其中方法的定义与函数几乎一样，只是类中的方法必须至少有一个参数，这个参数代表调用该方法的实例对象。通常是在特殊方法__init__方法中定义实例变量self，创建对象时python会调用该方法。
	class student:
		def __init__(self,name,age):
			self.name = name
			self.age = age
			print("My name is ",name," and I'm ",age," years old")

三、面向对象编程的四大特征。封装、抽象、多态和继承。

四、组合关系
	在处理数据过程中，通常会遇到将对象作为变量保存在另一个对象中的情况。可以模拟现实生活中的拥有关系。
	比如人与狗的关系就是拥有关系。
	你比如创建Dog,和Person两个对象，并给Dog设置一个变量owner,改变量的值为Person的实例。

五、实例变量和类变量
	类变量：这种变量是定义在类作用域的，简而言之是类似于类中的全局变量而已，但是其在对象中是共享的，也就是创建的两个对象都共有一个变量，而且其中一个对象修改了变量的值，另外的变量的值也会随之改变。
	实例变量：实例变量是创建于类中的方法中的变量，简而言之就是非全局的变量，他是类特有的
	def __init__(self):
		self.x = []
	def addX(self,x):
		self.x.append(x)	
	x为实例变量


六、检测实例的类型以及检查类的继承关系：
	isinstance(instance,typename)：该方法用于检测类的类型
	issubclass(classA,classB)

七、多重继承
	语法：class Children(Base1,Base2,Base3...):
	
八、私有变量：
	




















